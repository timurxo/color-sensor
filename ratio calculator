`timescale 1ns / 1ps



module calc_per(
     input clk,
     input enable,
     input [19:0] numerator,
     input [19:0] denominator,
  
     output reg done = 0,
     output reg [7:0] percent = 0
);


     reg [7:0] final = 0;
     reg [1:0] state = 0;
     reg [26:0] total = 0;
     
     parameter start = 0, division = 1, finish = 2;
     
     
     
     

     always @ (posedge clk)
     
          // if calculator does not function
          if(~enable) begin
               state = 0;
               total = 0;
               final = 0;
               percent = 0;
               done = 0;
          end
          
          
          // calculator start working
          else
          case(state)
          
          // multiply numerator by 100
               start:
                    if(denominator != 0) 
                    begin
                         total <= numerator*100;
                         state <= division;
                    end
                    
                    
           
               // division process
               // taking out denominator value from result value while it is possible
               // (while result is greater than denominator)        
               division:
                    if(total >= denominator) 
                    begin
                         // new total
                         total = total - denominator;
                         // percentage updates each time by 1
                         final = final + 1;
                         state = division;
                    end
                    
                    else 
                        state <= finish;
                        
                        
                        
               // getting the final result        
               finish:
               begin
                    percent <= final;
                    done <= 1;
               end
          endcase


endmodule
